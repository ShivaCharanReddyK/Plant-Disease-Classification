{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalle\\\\PPDC\\\\Potato-Disease-Classification-master\\\\frontend\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardActions, Button, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    margin: \"0 auto\",\n    marginTop: theme.spacing(4)\n  },\n  detail: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    marginLeft: \"auto\"\n  }\n}));\nconst ImageUpload = () => {\n  _s();\n  const classes = useStyles();\n  const apiUrl = \"http://localhost:8080/predict\"; // Replace with your Flask API URL\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [image, setImage] = useState(null);\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setImage(URL.createObjectURL(event.target.files[0]));\n    setData(null);\n    setError(null);\n  };\n  const sendFile = async () => {\n    if (selectedFile) {\n      let formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      try {\n        let res = await axios.post(apiUrl, formData);\n        if (res.status === 200) {\n          setData(res.data);\n        }\n      } catch (error) {\n        setError(\"Error occurred while processing the image.\");\n        console.error(\"Error:\", error);\n      }\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (selectedFile) {\n      setIsLoading(true);\n      sendFile();\n    }\n  }, [selectedFile]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        align: \"center\",\n        children: \"Potato Disease Classifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange,\n        style: {\n          display: \"none\"\n        },\n        id: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          component: \"span\",\n          fullWidth: true,\n          children: \"Select Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }, this), data && /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.detail,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Predicted Class: \", data.class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Confidence: \", data.confidence]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), data.fertilizer && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Fertilizer Recommendations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), Object.entries(data.fertilizer).map(_ref => {\n            let [disease, recommendations] = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: [disease, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: recommendations.map((recommendation, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: recommendation\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)]\n            }, disease, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setSelectedFile(null),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"IRS2O62Ux94np4XpL6lcNLAY/zk=\", false, function () {\n  return [useStyles];\n});\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","makeStyles","Card","CardContent","CardActions","Button","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","root","maxWidth","margin","marginTop","spacing","detail","button","marginLeft","ImageUpload","_s","classes","apiUrl","selectedFile","setSelectedFile","image","setImage","data","setData","isLoading","setIsLoading","error","setError","handleFileChange","event","target","files","URL","createObjectURL","sendFile","formData","FormData","append","res","post","status","console","className","children","variant","component","align","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","display","id","htmlFor","color","fullWidth","src","alt","gutterBottom","class","confidence","fertilizer","Object","entries","map","_ref","disease","recommendations","recommendation","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kalle/PPDC/Potato-Disease-Classification-master/frontend/src/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    margin: \"0 auto\",\n    marginTop: theme.spacing(4),\n  },\n  detail: {\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    marginLeft: \"auto\",\n  },\n}));\n\nconst ImageUpload = () => {\n  const classes = useStyles();\n  const apiUrl = \"http://localhost:8080/predict\"; // Replace with your Flask API URL\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [image, setImage] = useState(null);\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setImage(URL.createObjectURL(event.target.files[0]));\n    setData(null);\n    setError(null);\n  };\n\n  const sendFile = async () => {\n    if (selectedFile) {\n      let formData = new FormData();\n      formData.append(\"file\", selectedFile);\n\n      try {\n        let res = await axios.post(apiUrl, formData);\n        if (res.status === 200) {\n          setData(res.data);\n        }\n      } catch (error) {\n        setError(\"Error occurred while processing the image.\");\n        console.error(\"Error:\", error);\n      }\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedFile) {\n      setIsLoading(true);\n      sendFile();\n    }\n  }, [selectedFile]);\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n          Potato Disease Classifier\n        </Typography>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleFileChange}\n          style={{ display: \"none\" }}\n          id=\"file-input\"\n        />\n        <label htmlFor=\"file-input\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            component=\"span\"\n            fullWidth\n          >\n            Select Image\n          </Button>\n        </label>\n        {image && <img src={image} alt=\"Selected\" />}\n        {isLoading && <Typography>Loading...</Typography>}\n        {error && <Typography color=\"error\">{error}</Typography>}\n        {data && (\n          <CardContent className={classes.detail}>\n            <Typography variant=\"h6\" gutterBottom>\n              Predicted Class: {data.class}\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Confidence: {data.confidence}\n            </Typography>\n            {data.fertilizer && (\n              <>\n                <Typography variant=\"h6\" gutterBottom>\n                  Fertilizer Recommendations:\n                </Typography>\n                {Object.entries(data.fertilizer).map(([disease, recommendations]) => (\n                  <div key={disease}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {disease}:\n                    </Typography>\n                    <ul>\n                      {recommendations.map((recommendation, index) => (\n                        <li key={index}>{recommendation}</li>\n                      ))}\n                    </ul>\n                  </div>\n                ))}\n              </>\n            )}\n          </CardContent>\n        )}\n      </CardContent>\n      <CardActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => setSelectedFile(null)}\n        >\n          Clear\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}