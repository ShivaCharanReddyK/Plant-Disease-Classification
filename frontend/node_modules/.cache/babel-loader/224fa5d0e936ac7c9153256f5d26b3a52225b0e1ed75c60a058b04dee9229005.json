{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport merge from './merge';\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\nfunction css(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), omit(props.css, [styleFunction.filterProps]));\n    }\n    return output;\n  };\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\nexport default css;","map":{"version":3,"names":["_toConsumableArray","_extends","PropTypes","merge","omit","input","fields","output","Object","keys","forEach","prop","indexOf","css","styleFunction","newStyleFunction","props","theme","filterProps","propTypes","process","env","NODE_ENV","object","concat"],"sources":["C:/Users/kalle/PPDC/Potato-Disease-Classification-master/frontend/node_modules/@material-ui/system/esm/css.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nfunction css(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default css;"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,SAAS;AAE3B,SAASC,IAAIA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC3B,IAAIC,MAAM,GAAG,CAAC,CAAC;EACfC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,OAAO,CAAC,UAAUC,IAAI,EAAE;IACzC,IAAIL,MAAM,CAACM,OAAO,CAACD,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MAC/BJ,MAAM,CAACI,IAAI,CAAC,GAAGN,KAAK,CAACM,IAAI,CAAC;IAC5B;EACF,CAAC,CAAC;EACF,OAAOJ,MAAM;AACf;AAEA,SAASM,GAAGA,CAACC,aAAa,EAAE;EAC1B,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,KAAK,EAAE;IACtD,IAAIT,MAAM,GAAGO,aAAa,CAACE,KAAK,CAAC;IAEjC,IAAIA,KAAK,CAACH,GAAG,EAAE;MACb,OAAOZ,QAAQ,CAAC,CAAC,CAAC,EAAEE,KAAK,CAACI,MAAM,EAAEO,aAAa,CAACb,QAAQ,CAAC;QACvDgB,KAAK,EAAED,KAAK,CAACC;MACf,CAAC,EAAED,KAAK,CAACH,GAAG,CAAC,CAAC,CAAC,EAAET,IAAI,CAACY,KAAK,CAACH,GAAG,EAAE,CAACC,aAAa,CAACI,WAAW,CAAC,CAAC,CAAC;IAChE;IAEA,OAAOX,MAAM;EACf,CAAC;EAEDQ,gBAAgB,CAACI,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGrB,QAAQ,CAAC,CAAC,CAAC,EAAEa,aAAa,CAACK,SAAS,EAAE;IACzGN,GAAG,EAAEX,SAAS,CAACqB;EACjB,CAAC,CAAC,GAAG,CAAC,CAAC;EACPR,gBAAgB,CAACG,WAAW,GAAG,CAAC,KAAK,CAAC,CAACM,MAAM,CAACxB,kBAAkB,CAACc,aAAa,CAACI,WAAW,CAAC,CAAC;EAC5F,OAAOH,gBAAgB;AACzB;AAEA,eAAeF,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}